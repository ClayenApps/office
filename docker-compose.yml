version: "3.7"

services:
  # Servers

  proxy:
    container_name: ${COMPOSE_PROJECT_NAME}-proxy
    image: ghcr.io/clayenapps/${COMPOSE_PROJECT_NAME}-proxy:latest
    build: proxy
    restart: unless-stopped
    expose: [ 80 ]
    ports: [ 443:443 ]
    networks: [ public, internal ]
    cap_add: [ NET_ADMIN ]
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    env_file: [ .env ]

  web:
    image: ghcr.io/clayenapps/${COMPOSE_PROJECT_NAME}-web:latest
    build: web
    restart: unless-stopped
    init: true
    expose: [ 3000 ]
    depends_on: [ api ]
    networks: [ internal ]

  api:
    image: ghcr.io/clayenapps/${COMPOSE_PROJECT_NAME}-api:latest
    build: api
    restart: unless-stopped
    init: true
    expose: [ 3000 ]
    networks: [ internal ]

  docs:
    build:
      dockerfile: ./docs/Dockerfile
      context: .

  # Persistence

  postgres:
    image: postgres
    restart: unless-stopped
    expose: [ 5432 ]
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    networks: [ internal ]
    secrets: 
      - db-password

  adminer:
    image: adminer
    restart: "no"
    expose: [ 8080 ]
    depends_on: [ postgres ]
    profiles: [ adminer ]
    networks: [ internal ]

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data
    expose: [ 9000, 9001 ]
    networks: [ internal ]
    volumes: [ minio_storage:/data ]
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD_FILE: /run/secrets/minio-password
      # MINIO_SERVER_URL: https://storage.${DOMAIN}:443
      MINIO_BROWSER_REDIRECT_URL: https://admin.${DOMAIN}/minio
    secrets: [ minio-password ]
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: [ .env ]

networks:
  public:
  internal:


volumes:
  caddy_data:
  caddy_config:
  postgres_storage:
  minio_storage:


secrets:
  db-password:
    environment: "DB_PASSWORD"
  minio-password:
    environment: "MINIO_PASSWORD"
